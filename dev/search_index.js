var documenterSearchIndex = {"docs":
[{"location":"veh_track_reading/#Vehicle-Track-Reading-1","page":"Vehicle Track Reading","title":"Vehicle Track Reading","text":"","category":"section"},{"location":"veh_track_reading/#","page":"Vehicle Track Reading","title":"Vehicle Track Reading","text":"These functions are responsible for reading vehicle track information from provided csv file into a vector of scenes, a format compatible with AutomotiveSimulator.jl","category":"page"},{"location":"veh_track_reading/#","page":"Vehicle Track Reading","title":"Vehicle Track Reading","text":"    INTERACTIONTrajdata\n    carsinframe\n    car_df_index\n    read_veh_tracks","category":"page"},{"location":"veh_track_reading/#AutomotiveInteraction.INTERACTIONTrajdata","page":"Vehicle Track Reading","title":"AutomotiveInteraction.INTERACTIONTrajdata","text":"INTERACTIONTrajdata The trajectory data stored in the original INTERACTION dataset format. The dataset is a csv file with columns:     trackid      - Int64 - Representing the id of the agent     frameid      - Int64 - Represents the frames in which the agent appears in the video     timestampms  - Int64 - represents the time the agent appears in the video. The unit is millisecond     agenttype    - String - Can be person, car, truck and so on     x             - Float64 - x position, in meter     y             - Float64 - y position in meter     vx            - Float64 - x velocity in m/s     vy            - Float64 - y velocity in m/s     psi_rad       - Float64 - yaw angle in radian     length        - Float64 - Length of the vehicle, in meter     width         - Float64 - Width of the vehicle, in meter\n\nExample\n\ntdraw = INTERACTIONTrajdata(\"vehicle_tracks_000.csv\");\n\n\n\n\n\n","category":"type"},{"location":"veh_track_reading/#AutomotiveInteraction.carsinframe","page":"Vehicle Track Reading","title":"AutomotiveInteraction.carsinframe","text":"carsinframe(trajdata::INTERACTIONTrajdata, frame::Int)\n\nFrom the dictionary frame2cars which has frame number as key and all vector of car ids in that frame\n\nas value, this function extracts the value corresponding to key given by frame\n\nExample\n\n# Return array with car ids in frame 1\ncarsinframe(tdraw,1)\n\n\n\n\n\n","category":"function"},{"location":"veh_track_reading/#AutomotiveInteraction.car_df_index","page":"Vehicle Track Reading","title":"AutomotiveInteraction.car_df_index","text":"function car_df_index\n\nGiven frame and carid, find index of car in trajdata\nReturns 0 if it does not exist (CAVEAT THIS IS COMMENTED OUT)\n\n\n\n\n\n","category":"function"},{"location":"veh_track_reading/#AutomotiveInteraction.read_veh_tracks","page":"Vehicle Track Reading","title":"AutomotiveInteraction.read_veh_tracks","text":"function read_veh_tracks(;roadway)\n\nReads the vehicle tracks information from ../dataset/vehicle_tracks_000.csv\nModernize to stop using ListRecord and Trajdata\nJust use Vector of Scenes\n\nArguments\n\nroadway: Used in the vehicle state to create Frenet coords for the vehicle on the provided roadway\n\nExample\n\nroad_ext = make_interaction_roadway_with_extensions()\ntrajdata = read_veh_tracks(roadway=road_ext)\n\n# Then access a certain framenumber from the trajdata by\nscene = trajdata[1]\nrender([road_ext,scene,IDOverlay(scene=scene)])\n\n\n\n\n\n","category":"function"},{"location":"visualization/#Visualization-1","page":"Visualization","title":"Visualization","text":"","category":"section"},{"location":"visualization/#","page":"Visualization","title":"Visualization","text":"These functions are responsible to create visualizations using AutomotiveVisualization.jl.","category":"page"},{"location":"visualization/#","page":"Visualization","title":"Visualization","text":"    video_trajdata_replay\n    scenelist2video\n    video_overlay_scenelists\n    scenelist2video_curvepts","category":"page"},{"location":"visualization/#AutomotiveInteraction.video_trajdata_replay","page":"Visualization","title":"AutomotiveInteraction.video_trajdata_replay","text":"function video_trajdata_replay\n\nMakes a video of the trajdata taking frame range as input\n\nExample\n\nvideo_trajdata_replay(range=1:100,roadway=roadway,trajdata=traj_interaction,\n    filename=joinpath(@__DIR__,\"../julia_notebooks/media/replay_vid.mp4\")\n\n\n\n\n\n","category":"function"},{"location":"visualization/#AutomotiveInteraction.scenelist2video","page":"Visualization","title":"AutomotiveInteraction.scenelist2video","text":"function scenelist2video(scene_list;filename = \"media/scenelist_to_video.mp4\")\n\nMake video from a list of scenes (generally generated using get_hallucination_scenes\n\nExamples\n\n# See run_vehicles function in driving_simulation.jl\n\n\n\n\n\n","category":"function"},{"location":"visualization/#AutomotiveInteraction.video_overlay_scenelists","page":"Visualization","title":"AutomotiveInteraction.video_overlay_scenelists","text":"function videooverlayscenelists(scenelist1,scenelist2,roadway,filename)\n\nExample\n\nscene_list_1 = run_vehicles(id_list=[6,8,19,28,29],roadway=road_ext,traj=traj_ext,\nfilename=\"model_driven.mp4\")\nscene_list_2 = traj_ext[1:length(scene_list_1)]\nvideo_overlay_scenes(scene_list_1,scene_list_2,id_list=[6,8,19,28,29],\nroadway=road_ext,filename=\"model_vs_truth.mp4\")\n\n\n\n\n\n","category":"function"},{"location":"visualization/#AutomotiveInteraction.scenelist2video_curvepts","page":"Visualization","title":"AutomotiveInteraction.scenelist2video_curvepts","text":"function scenelist2video(scene_list;filename = \"media/scenelist_to_video.mp4\")\n\nMake video from a list of scenes (generally generated using get_hallucination_scenes\n\nExamples\n\nscene = Scene(500)\nget!(scene,traj_interaction,1);\nscene_list = get_hallucination_scenes(scene,models=models);\nscenelist2video(scene_list,filename=\"media/scenelist_to_video.mp4\")\n\n\n\n\n\n","category":"function"},{"location":"#About-1","page":"About","title":"About","text":"","category":"section"},{"location":"#","page":"About","title":"About","text":"This is the documentation for AutomotiveInteraction.jl.","category":"page"},{"location":"#","page":"About","title":"About","text":"\nPages = [\n    \"roadway_building.md\",\n    \"driving_simulation.md\",\n    \"visualization.md\",\n    \"veh_track_reading.md\"\n]","category":"page"},{"location":"roadway_building/#Roadway-Building-1","page":"Roadway Building","title":"Roadway Building","text":"","category":"section"},{"location":"roadway_building/#","page":"Roadway Building","title":"Roadway Building","text":"These functions are required to build the roadway from the provided centerline text files.","category":"page"},{"location":"roadway_building/#","page":"Roadway Building","title":"Roadway Building","text":"    append_to_curve!\n    get_new_angle\n    bound_heading\n    append_headings\n    centerlines_txt2tracks\n    make_roadway_interaction\n    make_roadway_ngsim\n    make_roadway_interaction_with_extensions\n    make_discont_roadway_straight\n    make_discont_roadway_jagged\n    MergingRoadway\n    add_renderable!","category":"page"},{"location":"roadway_building/#AutomotiveInteraction.append_to_curve!","page":"Roadway Building","title":"AutomotiveInteraction.append_to_curve!","text":"function append_to_curve!\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.get_new_angle","page":"Roadway Building","title":"AutomotiveInteraction.get_new_angle","text":"function get_new_angle\n\nDoes the actual angle calculation based on the x y coordinates\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.bound_heading","page":"Roadway Building","title":"AutomotiveInteraction.bound_heading","text":"function bound_heading\n\nMake the angle range from 0 to pi instead of going beyond\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.append_headings","page":"Roadway Building","title":"AutomotiveInteraction.append_headings","text":"function append_headings\n\nUsed create the angles and append them into the coordinates\n\nExamples\n\nx_coods = [1089.07510, 1093.82626, 1101.19325, 1112.59899, 1123.96733, 1133.24150, 1146.47964]\ny_coods = [936.31213, 936.92692,938.52419, 940.93865, 943.27882, 945.21039, 947.88488]\ncoods = hcat(x_coods,y_coods)\nappend_headings(coods)\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.centerlines_txt2tracks","page":"Roadway Building","title":"AutomotiveInteraction.centerlines_txt2tracks","text":"function centerlines_txt2tracks(filename)\n\nReads a .txt file which contains x coords in col 1 and y coords in col2\nReturns a track, i.e. a curve from AutomotiveDrivingModels\n\nExamples\n\n# See make_roadway_interaction()\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.make_roadway_interaction","page":"Roadway Building","title":"AutomotiveInteraction.make_roadway_interaction","text":"function make_roadway_interaction()\n\nOverview\n\nMake the DR_CHN_Merging roadway by reading in the centerlines in AutomotiveInteraction.jl/dataset\nThese centerlines have been modified from the original ones in the centerlines_DR_CHN_Merging_ZS folder\nThe long lane being merged into by on ramp was split into before and after merge point in 2 separate txt files\nEg: output_centerline_1.txt has been split into centerlines_b1.txt (before merge point) and centerlines_b2.txt (after).\nSimilarly, output_centerline_5.txt has been split into cetnerlines_g.txt (before) and centerlines_h.txt (after)\nFinally, the files in centerlines_DR_CHN_Merging_ZS folder output_centerline_<>.txt had x coords in row 1 and y coords in row 2.\nThe current centerlines_<>.txt have x in col 1 and y in col 2\n\nDetails\n\nReads in the centerline information from AutomotiveInteraction.jl/dataset\nSegment 1: Has 2 lanes: On ramp a is lane 1 and b1 is lane 2\nSegment 2: Has 1 lane: b1 is lane 1. Both a and b1 connect into b2\nSegment 3: Has 2 lanes: c is lane 1 and d is lane 2\nSegment 4: Has 3 lanes: g is lane 1, f1 is lane 2, e1 is lane 3.\nSegment 5: Has 2 lanes: f2 is lane 1, e2 is lane 2. e1 connects to e2 and both g and f1 to e2\nNote that convention used here is that right most lane in direction of travel is given lane id 1\n\nExamples\n\nroadway_interaction = make_roadway_interaction()\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.make_roadway_ngsim","page":"Roadway Building","title":"AutomotiveInteraction.make_roadway_ngsim","text":"function make_roadway_ngsim()\n\nRead in the ngsim 101 roadway from the provided roadway file ../dataset/ngsim_101.txt\n\nExamples\n\nroadway_ngsim = make_roadway_ngsim()\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.make_roadway_interaction_with_extensions","page":"Roadway Building","title":"AutomotiveInteraction.make_roadway_interaction_with_extensions","text":"Make roadway interaction but with added extensions to avoid vehicle getting blocked at road end\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.make_discont_roadway_straight","page":"Roadway Building","title":"AutomotiveInteraction.make_discont_roadway_straight","text":"function make_discont_roadway(;segment_length::Float64=20., separation::Float64=2.)\n\nIntended to test whether jumpy behavior is shown by vehicle\n\nUsed by\n\ntest_jumpy_vehicle\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.make_discont_roadway_jagged","page":"Roadway Building","title":"AutomotiveInteraction.make_discont_roadway_jagged","text":"function make_discont_roadway_jagged(;segment_length::Float64=20., separation::Float64=2.)\n\nroad with two horizontal segments but seperated in y to create a zig zag\n\nExamples\n\nroad_zigzag = make_discont_roadway_jagged()\n\n\n\n\n\n","category":"function"},{"location":"roadway_building/#AutomotiveInteraction.MergingRoadway","page":"Roadway Building","title":"AutomotiveInteraction.MergingRoadway","text":"struct MergingRoadway\n\nWrapper around a roadway for special rendering avoiding lane boundary wierd in merge\n\nExample\n\nroad_ext = make_roadway_interaction_with_extensions()\nroadway = MergingRoadway(road_ext)\nrender([roadway])\n\n\n\n\n\n","category":"type"},{"location":"roadway_building/#AutomotiveVisualization.add_renderable!","page":"Roadway Building","title":"AutomotiveVisualization.add_renderable!","text":"Dedicated render function for the MergingRoadway wrapper\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#Driving-Simulation-1","page":"Driving Simulation","title":"Driving Simulation","text":"","category":"section"},{"location":"driving_simulation/#","page":"Driving Simulation","title":"Driving Simulation","text":"These functions help in running driving simulations.","category":"page"},{"location":"driving_simulation/#","page":"Driving Simulation","title":"Driving Simulation","text":"    keep_vehicle_subset!\n    make_def_models\n    make_IDM_models\n    make_cidm_models\n    make_iidm_models\n    make_TimLaneChanger_models\n    get_hallucination_scenes\n    run_vehicles\n    compare2truth\n    run_vehicles_curvept_overlay\n    test_barrier_vehicle\n    test_jumpy_vehicle","category":"page"},{"location":"driving_simulation/#AutomotiveInteraction.keep_vehicle_subset!","page":"Driving Simulation","title":"AutomotiveInteraction.keep_vehicle_subset!","text":"function keep_vehicle_subset!(scene::Scene, ids::Vector{Int})\n\nJust keep a set of vehicles in scene as specified by ids (a list of vehicle ids)\nObtained from ngsim_env/julia/src/ngsim_utils.jl\n\nExample\n\nscene = get_scene(1, traj_interaction)\nveh_id_list = [7,10,11,18,22,25,29]\nkeep_vehicle_subset!(scene,veh_id_list)\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.make_def_models","page":"Driving Simulation","title":"AutomotiveInteraction.make_def_models","text":"function make_def_models(scene)\n\nTakes an input scene and associates a default param Tim2DDriver to all the vehicles in the scene\n\nExamples\n\nscene = get_scene(1,traj_interaction)\nmodels = make_def_models(scene)\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.make_IDM_models","page":"Driving Simulation","title":"AutomotiveInteraction.make_IDM_models","text":"function make_IDM_models(scene)\n\nAssign default parameter IDM to all vehicles in the scene\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.make_cidm_models","page":"Driving Simulation","title":"AutomotiveInteraction.make_cidm_models","text":"function make_cidm_models(scene)\n\nAssign cooperative IDM as driver model to all vehicles in the scene\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.make_iidm_models","page":"Driving Simulation","title":"AutomotiveInteraction.make_iidm_models","text":"function make_iidm_models(scene)\n\nAssign intruder IDM as driver model to all vehicles in the scene\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.make_TimLaneChanger_models","page":"Driving Simulation","title":"AutomotiveInteraction.make_TimLaneChanger_models","text":"function make_TimLaneChanger_models(scene)\n\nTakes input scene and associates default param Tim2DDriver model to all vehs, with lane changer being TimLaneChanger\n\nExamples\n\nscene = get_scene(traj_interaction)\nmodels = make_TimLaneChanger_models(scene)\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.get_hallucination_scenes","page":"Driving Simulation","title":"AutomotiveInteraction.get_hallucination_scenes","text":"function get_hallucination_scenes\n\nHallucinate starting from start_step for nsteps using models and return a list of scenes\nUsed by plot_carwise_pos_vel to assess position and velocity traces against ground truth\n\nReturns\n\nhalluc_scenes_list: List containing the scenes starting with the ground truth scene at start_step\n\nExamples\n\nscene_list = get_hallucination_scenes(scene,models=models,duration=6)\nscenelist2video(scene_list,filename=\"media/driving_vid.mp4\")\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.run_vehicles","page":"Driving Simulation","title":"AutomotiveInteraction.run_vehicles","text":"function run_vehicles\n\nSelect vehicles with ids in id_list from frame number start_frame of track information in traj\nAssign default 2D driver model to the vehicle and run it for duration seconds on roadway\nWrites a video to location specified by filename\n\nArguments\n\nid_list: Vehicle ids in this list will be kept in the simulation. Others will be deleted\ntraj: Vehicle traj data stored in the Trajdata type provided by AutomotiveDrivingModels.jl\nstart_frame: Frame number of vehicle track data in traj\nroadway: a roadway object eg: roadway_interaction\nnomergeoverlay: If set to false then overlays the merge veh rays\n\nExamples\n\nscene_list = run_vehicles(id_list=[29,19,28,6,8,25,2,10,7,18,12],roadway=roadway_interaction,\n    filename=joinpath(@__DIR__,\"julia_notebooks/media/run_test_ext_long.mp4\"))\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.compare2truth","page":"Driving Simulation","title":"AutomotiveInteraction.compare2truth","text":"function compare2truth(;idlist=[],startframe=101,duration=10,traj,roadway,filename)     scenelist1 = runvehicles(idlist=idlist,startframe=start_frame,duration=duration,     traj=traj,roadway=roadway)\n\nCompare model driven trajectory by overlaying ground truth\n\nExamples\n\nid_list = [6,19,28,29,34,37,40,42,43,49,50]\ncompare2truth(id_list=id_list,start_frame=101,traj=traj_ext,roadway=road_ext,\nfilename = \"julia_notebooks/media/compare_startframe.mp4\")\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.run_vehicles_curvept_overlay","page":"Driving Simulation","title":"AutomotiveInteraction.run_vehicles_curvept_overlay","text":"Written to debug the jumpy behavior by overlaying the curvepoints of roadway\n\nExample\n\nrunvehiclescurveptoverlay(idlist=[6,8],roadway=roadext,traj=trajext,     filename = \"/scratch/AutomotiveInteraction/julianotebooks/media/roadext_jumpy.mp4\")\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.test_barrier_vehicle","page":"Driving Simulation","title":"AutomotiveInteraction.test_barrier_vehicle","text":"function test_barrier_vehicle\n\nPlace a vehicle that does not move to test how far IDM+MOBIL driven vehicles look ahead\n\nExamples\n\ntest_barrier_vehicle(id_list=[20,29,19,28,6,8,25,2,10,7,18,12,100],roadway=road_ext,\n    traj=traj_ext,filename=joinpath(@__DIR__,\"../julia_notebooks/media/barrier_test.mp4\"))\n\n\n\n\n\n","category":"function"},{"location":"driving_simulation/#AutomotiveInteraction.test_jumpy_vehicle","page":"Driving Simulation","title":"AutomotiveInteraction.test_jumpy_vehicle","text":"function test_jumpy_vehicle()\n\nWritten to investigate non-smooth behavior.\nWant to assess whether having no curve points (for example when lanes are connected using connect!)\nresults in jumpy vehicle trajectory behavior\n\nArguments\n\nsegment_length Length of the segment. There will be two such segments with a separation between \nseparation Length of the break between two road segments\n\nExamples\n\ntest_jumpy_vehicle(segment_length = 50.,separation = 5.,\n    filename=\"/scratch/AutomotiveInteraction/julia_notebooks/media/jumpy.mp4\")\n\n\n\n\n\n","category":"function"}]
}
